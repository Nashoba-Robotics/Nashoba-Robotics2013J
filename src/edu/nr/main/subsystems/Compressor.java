// robotBuilder Version: 0.0.2
//
// This file was generated by robotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from robotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package edu.nr.main.subsystems;
import edu.nr.main.commands.IdleCompressor;
import edu.nr.main.RobotMap;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 *
 */
public class Compressor extends Subsystem 
{
    private boolean automatic = false;
    Relay relay = RobotMap.compressorRelay;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DigitalInput limiter = RobotMap.compressorLimiter;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() 
    {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new IdleCompressor());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    
    public void toggleAutomatic()
    {
	automatic = !automatic;
    }
    
    public boolean getAutomatic()
    {
	return automatic;
    }
    
    public void setCompressor(boolean value)
    {
        if(value) 
        {
            relay.set(Relay.Value.kOn);
        }    
        else {
            relay.set(Relay.Value.kOff);
        }    
    }
    
    public boolean isPressureFull()
    {
	return limiter.get();
    }
    
    public void toggle()
    {
        if(!automatic)
            setCompressor((relay.get() == Relay.Value.kOn)?(false):(true));
    }
}