// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
package edu.nr.main.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.nr.main.Robot;
/**
 *
 */
public class  TrackDriveSpeedCommand extends Command {
    float m_speed;
    public TrackDriveSpeedCommand(float speed) 
    {
        m_speed = speed;
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.track);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        Robot.track.brake();
        
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        if(m_speed > 0)
        {
                if(timeSinceInitialized() > 1)
                {
                        Robot.track.drive(m_speed);
                }
        }
        else
        {
                if(timeSinceInitialized() > 1)
                {
                        Robot.track.drive(m_speed);
                }
        }
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }
    // Called once after isFinished returns true
    protected void end() {
        Robot.track.drive(0);
        Robot.track.brake();
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        Robot.track.drive(0);
        Robot.track.brake();
    }
}
